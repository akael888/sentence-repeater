{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\text-preview.js\";\nimport css from \"./text-preview.module.css\";\nimport { motion } from \"motion/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Preview({\n  incomingPreviewText,\n  incomingVariables\n}) {\n  //Tailwind Styles\n  let tw_preview_glassMorphBG = \" shadow-[0_10px_30px_rgba(0,0,0,0.35)] backdrop-blur-[6px] backdrop-saturate-[120%]  rounded-[18px]\";\n  // let tw_preview_animation =\n  //   \" animate-[fadeInTop_2s_ease_0s_1_normal_forwards]\";\n\n  function generatePreviewandVariables() {\n    let previewText = \"Preview Text\";\n    console.log(\"Generated Text from incomingpreviewtext: \" + \"-\" + incomingPreviewText.charCodeAt(0) + \"-\");\n    if (incomingPreviewText && incomingVariables) {\n      if (incomingPreviewText.charCodeAt(0) != 10) {\n        let text = incomingPreviewText;\n        const newincomingVariables = new Map();\n        let currentKeyIndex = 0;\n        for (const [key, value] of incomingVariables.entries()) {\n          newincomingVariables.set(key, {\n            ...value\n          });\n        }\n        const variableEntries = Array.from(incomingVariables.entries());\n        while (text.includes(\"{}\") && variableEntries.length > 0) {\n          const [key, value] = variableEntries[currentKeyIndex % variableEntries.length];\n          if (value.name !== \"\") {\n            text = text.replace(\"{}\", \"{\" + String(value.name) + \"}\");\n          } else {\n            text = text.replace(\"{}\", \"{\" + \"Variable \" + String(key) + \"}\");\n          }\n\n          //DEBUG LOG--------------------------\n          console.log(\"Text inside generatedPreview() : \" + text + \" (on this Variable Index: \" + currentKeyIndex + \")\");\n          //-------------------------------------\n\n          currentKeyIndex++;\n        }\n\n        //DEBUG LOG--------------------------\n        console.log(\"Generated Text from generatePreviewandVariables(): \" + \"-\" + text + \"-\");\n\n        //-------------------------------------\n\n        return String(text);\n      } else return previewText;\n    } else return previewText;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"w-fit h-auto max-w-[80%] flex items-center text-center m-auto p-2.5 rounded-[10px] overflow-auto\" + tw_preview_glassMorphBG,\n      initial: {\n        opacity: 0,\n        y: -100,\n        height: 0\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 1.5,\n        ease: \"easeInOut\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"w-full whitespace-pre-wrap \",\n        children: generatePreviewandVariables()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Preview;\nexport default Preview;\n\n// \"w-fit h-full grid text-main-color m-auto p-2.5 rounded-[10px]\" +\n// tw_preview_glassMorphBG +\n// tw_preview_animation\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["css","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Preview","incomingPreviewText","incomingVariables","tw_preview_glassMorphBG","generatePreviewandVariables","previewText","console","log","charCodeAt","text","newincomingVariables","Map","currentKeyIndex","key","value","entries","set","variableEntries","Array","from","includes","length","name","replace","String","children","div","className","initial","opacity","y","height","animate","transition","duration","ease","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/text-preview.js"],"sourcesContent":["import css from \"./text-preview.module.css\";\r\nimport { motion } from \"motion/react\";\r\nfunction Preview({ incomingPreviewText, incomingVariables }) {\r\n  //Tailwind Styles\r\n  let tw_preview_glassMorphBG =\r\n    \" shadow-[0_10px_30px_rgba(0,0,0,0.35)] backdrop-blur-[6px] backdrop-saturate-[120%]  rounded-[18px]\";\r\n  // let tw_preview_animation =\r\n  //   \" animate-[fadeInTop_2s_ease_0s_1_normal_forwards]\";\r\n\r\n  function generatePreviewandVariables() {\r\n    let previewText = \"Preview Text\";\r\n    console.log(\r\n      \"Generated Text from incomingpreviewtext: \" +\r\n        \"-\" +\r\n        incomingPreviewText.charCodeAt(0) +\r\n        \"-\"\r\n    );\r\n    if (incomingPreviewText && incomingVariables) {\r\n      if (incomingPreviewText.charCodeAt(0) != 10) {\r\n        let text = incomingPreviewText;\r\n        const newincomingVariables = new Map();\r\n        let currentKeyIndex = 0;\r\n        for (const [key, value] of incomingVariables.entries()) {\r\n          newincomingVariables.set(key, { ...value });\r\n        }\r\n        const variableEntries = Array.from(incomingVariables.entries());\r\n\r\n        while (text.includes(\"{}\") && variableEntries.length > 0) {\r\n          const [key, value] =\r\n            variableEntries[currentKeyIndex % variableEntries.length];\r\n\r\n          if (value.name !== \"\") {\r\n            text = text.replace(\"{}\", \"{\" + String(value.name) + \"}\");\r\n          } else {\r\n            text = text.replace(\"{}\", \"{\" + \"Variable \" + String(key) + \"}\");\r\n          }\r\n\r\n          //DEBUG LOG--------------------------\r\n          console.log(\r\n            \"Text inside generatedPreview() : \" +\r\n              text +\r\n              \" (on this Variable Index: \" +\r\n              currentKeyIndex +\r\n              \")\"\r\n          );\r\n          //-------------------------------------\r\n\r\n          currentKeyIndex++;\r\n        }\r\n\r\n        //DEBUG LOG--------------------------\r\n        console.log(\r\n          \"Generated Text from generatePreviewandVariables(): \" +\r\n            \"-\" +\r\n            text +\r\n            \"-\"\r\n        );\r\n\r\n        //-------------------------------------\r\n\r\n        return String(text);\r\n      } else return previewText;\r\n    } else return previewText;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        className={\r\n          \"w-fit h-auto max-w-[80%] flex items-center text-center m-auto p-2.5 rounded-[10px] overflow-auto\" +\r\n          tw_preview_glassMorphBG\r\n        }\r\n        initial={{ opacity: 0, y: -100, height: 0 }}\r\n          animate={{\r\n            opacity: 1,\r\n            y: 0,\r\n          }}\r\n          transition={{\r\n            duration: 1.5,\r\n            ease: \"easeInOut\",\r\n          }}\r\n      >\r\n        <h1 className=\"w-full whitespace-pre-wrap \">{generatePreviewandVariables()}</h1>\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n\r\n// \"w-fit h-full grid text-main-color m-auto p-2.5 rounded-[10px]\" +\r\n// tw_preview_glassMorphBG +\r\n// tw_preview_animation\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,2BAA2B;AAC3C,SAASC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACtC,SAASC,OAAOA,CAAC;EAAEC,mBAAmB;EAAEC;AAAkB,CAAC,EAAE;EAC3D;EACA,IAAIC,uBAAuB,GACzB,qGAAqG;EACvG;EACA;;EAEA,SAASC,2BAA2BA,CAAA,EAAG;IACrC,IAAIC,WAAW,GAAG,cAAc;IAChCC,OAAO,CAACC,GAAG,CACT,2CAA2C,GACzC,GAAG,GACHN,mBAAmB,CAACO,UAAU,CAAC,CAAC,CAAC,GACjC,GACJ,CAAC;IACD,IAAIP,mBAAmB,IAAIC,iBAAiB,EAAE;MAC5C,IAAID,mBAAmB,CAACO,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;QAC3C,IAAIC,IAAI,GAAGR,mBAAmB;QAC9B,MAAMS,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC;QACtC,IAAIC,eAAe,GAAG,CAAC;QACvB,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIZ,iBAAiB,CAACa,OAAO,CAAC,CAAC,EAAE;UACtDL,oBAAoB,CAACM,GAAG,CAACH,GAAG,EAAE;YAAE,GAAGC;UAAM,CAAC,CAAC;QAC7C;QACA,MAAMG,eAAe,GAAGC,KAAK,CAACC,IAAI,CAACjB,iBAAiB,CAACa,OAAO,CAAC,CAAC,CAAC;QAE/D,OAAON,IAAI,CAACW,QAAQ,CAAC,IAAI,CAAC,IAAIH,eAAe,CAACI,MAAM,GAAG,CAAC,EAAE;UACxD,MAAM,CAACR,GAAG,EAAEC,KAAK,CAAC,GAChBG,eAAe,CAACL,eAAe,GAAGK,eAAe,CAACI,MAAM,CAAC;UAE3D,IAAIP,KAAK,CAACQ,IAAI,KAAK,EAAE,EAAE;YACrBb,IAAI,GAAGA,IAAI,CAACc,OAAO,CAAC,IAAI,EAAE,GAAG,GAAGC,MAAM,CAACV,KAAK,CAACQ,IAAI,CAAC,GAAG,GAAG,CAAC;UAC3D,CAAC,MAAM;YACLb,IAAI,GAAGA,IAAI,CAACc,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,WAAW,GAAGC,MAAM,CAACX,GAAG,CAAC,GAAG,GAAG,CAAC;UAClE;;UAEA;UACAP,OAAO,CAACC,GAAG,CACT,mCAAmC,GACjCE,IAAI,GACJ,4BAA4B,GAC5BG,eAAe,GACf,GACJ,CAAC;UACD;;UAEAA,eAAe,EAAE;QACnB;;QAEA;QACAN,OAAO,CAACC,GAAG,CACT,qDAAqD,GACnD,GAAG,GACHE,IAAI,GACJ,GACJ,CAAC;;QAED;;QAEA,OAAOe,MAAM,CAACf,IAAI,CAAC;MACrB,CAAC,MAAM,OAAOJ,WAAW;IAC3B,CAAC,MAAM,OAAOA,WAAW;EAC3B;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA,CAACF,MAAM,CAAC+B,GAAG;MACTC,SAAS,EACP,kGAAkG,GAClGxB,uBACD;MACDyB,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC,GAAG;QAAEC,MAAM,EAAE;MAAE,CAAE;MAC1CC,OAAO,EAAE;QACPH,OAAO,EAAE,CAAC;QACVC,CAAC,EAAE;MACL,CAAE;MACFG,UAAU,EAAE;QACVC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE;MACR,CAAE;MAAAV,QAAA,eAEJ5B,OAAA;QAAI8B,SAAS,EAAC,6BAA6B;QAAAF,QAAA,EAAErB,2BAA2B,CAAC;MAAC;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAC,gBACb,CAAC;AAEP;AAACC,EAAA,GApFQxC,OAAO;AAsFhB,eAAeA,OAAO;;AAEtB;AACA;AACA;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}