{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\var-table-body.js\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Chip from \"./chip-list\";\nimport css from \"./var-table-body.module.css\";\nimport { useState, useRef } from \"react\";\nimport VarTableRowData from \"./var-table-row-data\";\nimport SpawnVarModal from \"./spawn-var-modal-button\";\nimport VariableModal from \"./var-modal\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VarTableBody({\n  incomingVariablesBody,\n  incomingHandleVariableChanges,\n  incomingTypeValidator,\n  incomingOtherValidator,\n  incomingHandleModalOnChange,\n  incomingHandleCurrentVariableSet\n}) {\n  //   const editableRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: \"shrink-1 w-full max-h-[12rem] overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: Array.from(incomingVariablesBody.entries()).map(([key, values]) => /*#__PURE__*/_jsxDEV(motion.tr, {\n          className: \"[&>*]:shrink-1 \",\n          initial: {\n            opacity: 0,\n            y: -100\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -10,\n            scaleY: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(VarTableRowData, {\n              incomingKey: key,\n              incomingValues: values,\n              tableDataType: \"VarName\",\n              incomingchangedValues: \"name\",\n              incomingHandleVariableChanges: incomingHandleVariableChanges,\n              incomingCustomColorText: \"main-color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"secondary\",\n                id: \"dropdown-basic\",\n                children: values.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => incomingHandleVariableChanges(key, \"type\", \"Integer\"),\n                  children: \"Integer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => incomingHandleVariableChanges(key, \"type\", \"String\"),\n                  children: \"String\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => incomingHandleVariableChanges(key, \"type\", \"Date\"),\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => incomingHandleVariableChanges(key, \"type\", \"List\"),\n                  children: \"List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(SpawnVarModal, {\n              incomingSelectedVariable: values,\n              incomingHandleModalOnChangeforSpawn: incomingHandleModalOnChange,\n              incomingHandleSelectedKey: key,\n              incomingHandleCurrentVariableSet: incomingHandleCurrentVariableSet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = VarTableBody;\nexport default VarTableBody;\nvar _c;\n$RefreshReg$(_c, \"VarTableBody\");","map":{"version":3,"names":["Dropdown","Chip","css","useState","useRef","VarTableRowData","SpawnVarModal","VariableModal","AnimatePresence","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","VarTableBody","incomingVariablesBody","incomingHandleVariableChanges","incomingTypeValidator","incomingOtherValidator","incomingHandleModalOnChange","incomingHandleCurrentVariableSet","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","entries","map","key","values","tr","initial","opacity","y","animate","exit","scaleY","incomingKey","incomingValues","tableDataType","incomingchangedValues","incomingCustomColorText","Toggle","variant","id","type","Menu","Item","onClick","incomingSelectedVariable","incomingHandleModalOnChangeforSpawn","incomingHandleSelectedKey","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/var-table-body.js"],"sourcesContent":["import Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Chip from \"./chip-list\";\r\nimport css from \"./var-table-body.module.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport VarTableRowData from \"./var-table-row-data\";\r\nimport SpawnVarModal from \"./spawn-var-modal-button\";\r\nimport VariableModal from \"./var-modal\";\r\nimport { AnimatePresence, motion } from \"motion/react\";\r\n\r\nfunction VarTableBody({\r\n  incomingVariablesBody,\r\n  incomingHandleVariableChanges,\r\n  incomingTypeValidator,\r\n  incomingOtherValidator,\r\n  incomingHandleModalOnChange,\r\n  incomingHandleCurrentVariableSet,\r\n}) {\r\n  //   const editableRef = useRef(null);\r\n  return (\r\n    <>\r\n      <div></div>\r\n      <tbody className=\"shrink-1 w-full max-h-[12rem] overflow-y-auto\">\r\n        <AnimatePresence>\r\n          {Array.from(incomingVariablesBody.entries()).map(([key, values]) => (\r\n            <motion.tr\r\n              key={key}\r\n              className={\"[&>*]:shrink-1 \"}\r\n              initial={{ opacity: 0, y: -100 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -10,scaleY:5 }}\r\n            >\r\n              <td>\r\n                <VarTableRowData\r\n                  incomingKey={key}\r\n                  incomingValues={values}\r\n                  tableDataType={\"VarName\"}\r\n                  incomingchangedValues={\"name\"}\r\n                  incomingHandleVariableChanges={incomingHandleVariableChanges}\r\n                  incomingCustomColorText=\"main-color\"\r\n                ></VarTableRowData>\r\n              </td>\r\n              <td>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                    {values.type}\r\n                  </Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        incomingHandleVariableChanges(key, \"type\", \"Integer\")\r\n                      }\r\n                    >\r\n                      Integer\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        incomingHandleVariableChanges(key, \"type\", \"String\")\r\n                      }\r\n                    >\r\n                      String\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        incomingHandleVariableChanges(key, \"type\", \"Date\")\r\n                      }\r\n                    >\r\n                      Date\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      onClick={() =>\r\n                        incomingHandleVariableChanges(key, \"type\", \"List\")\r\n                      }\r\n                    >\r\n                      List\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </td>\r\n              <td>\r\n                <SpawnVarModal\r\n                  incomingSelectedVariable={values}\r\n                  incomingHandleModalOnChangeforSpawn={\r\n                    incomingHandleModalOnChange\r\n                  }\r\n                  incomingHandleSelectedKey={key}\r\n                  incomingHandleCurrentVariableSet={\r\n                    incomingHandleCurrentVariableSet\r\n                  }\r\n                ></SpawnVarModal>\r\n              </td>\r\n              {/* <>\r\n              {values.randomize &&\r\n              (values.type === \"Integer\" || values.type === \"Date\") ? (\r\n                <>\r\n                  {values.type === \"Integer\" ? (\r\n                    <>\r\n                      <td>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"minValue\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"maxValue\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </td>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <td>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"minDateValue\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </td>\r\n                      <td>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"maxDateValue\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </td>\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <td>\r\n                    {values.list != null && values.type === \"List\" ? (\r\n                      <Chip\r\n                        incomingVariableIndex={key}\r\n                        incomingChipList={values.list}\r\n                        incomingHandleVariableChanges={\r\n                          incomingHandleVariableChanges\r\n                        }\r\n                      ></Chip>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    {values.type !== \"Date\" ? (\r\n                      <>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"value\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <VarTableRowData\r\n                          incomingKey={key}\r\n                          incomingValues={values}\r\n                          tableDataType={\"VarStartValue\"}\r\n                          incomingchangedValues={\"dateValue\"}\r\n                          incomingHandleVariableChanges={\r\n                            incomingHandleVariableChanges\r\n                          }\r\n                        ></VarTableRowData>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                  {incomingOtherValidator.Random &&\r\n                    (incomingTypeValidator.Integer ||\r\n                      incomingTypeValidator.Date) && <td></td>}\r\n                </> //Untuk Munculin td tambahan kalau ada variable yang randomize\r\n              )}\r\n            </>\r\n\r\n            {/* <>\r\n              {values.type === \"Integer\" ||\r\n              values.type === \"List\" ||\r\n              values.type === \"Date\" ? (\r\n                <td>\r\n                  <VarTableRowData\r\n                    incomingKey={key}\r\n                    incomingValues={values}\r\n                    tableDataType={\"VarBoolean\"}\r\n                    incomingchangedValues={\"iterate\"}\r\n                    incomingHandleVariableChanges={\r\n                      incomingHandleVariableChanges\r\n                    }\r\n                  ></VarTableRowData>\r\n                </td>\r\n              ) : (\r\n                incomingOtherValidator.Random &&\r\n                (incomingTypeValidator.Integer ||\r\n                  incomingTypeValidator.Date) && <td></td>\r\n              )}\r\n            </>\r\n            <>\r\n              {(values.type === \"Integer\" ||\r\n                values.type === \"List\" ||\r\n                values.type === \"Date\") &&\r\n              values.iterate ? (\r\n                <>\r\n                  <td>\r\n                    <VarTableRowData\r\n                      incomingKey={key}\r\n                      incomingValues={values}\r\n                      tableDataType={\"VarInterval\"}\r\n                      incomingchangedValues={\"interval\"}\r\n                      incomingHandleVariableChanges={\r\n                        incomingHandleVariableChanges\r\n                      }\r\n                    ></VarTableRowData>\r\n                  </td>\r\n                </>\r\n              ) : (\r\n                incomingOtherValidator.Iterate &&\r\n                (incomingTypeValidator.Integer ||\r\n                  incomingTypeValidator.Date) && <td></td> //apa ini??\r\n              )}\r\n            </>\r\n            <>\r\n              {values.type === \"Integer\" ||\r\n              values.type === \"List\" ||\r\n              values.type === \"Date\" ? (\r\n                <td>\r\n                  <VarTableRowData\r\n                    incomingKey={key}\r\n                    incomingValues={values}\r\n                    tableDataType={\"VarBoolean\"}\r\n                    incomingchangedValues={\"randomize\"}\r\n                    incomingHandleVariableChanges={\r\n                      incomingHandleVariableChanges\r\n                    }\r\n                  ></VarTableRowData>\r\n                </td>\r\n              ) : (\r\n                incomingOtherValidator.Random &&\r\n                (incomingTypeValidator.Integer ||\r\n                  incomingTypeValidator.Date) && <td></td>\r\n              )}\r\n            </> */}\r\n            </motion.tr>\r\n          ))}\r\n        </AnimatePresence>\r\n      </tbody>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VarTableBody;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}