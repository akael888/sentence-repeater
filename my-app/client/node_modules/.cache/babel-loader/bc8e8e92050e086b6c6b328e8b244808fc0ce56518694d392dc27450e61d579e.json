{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Repeater from \"./components/repeater\";\nimport Mode from \"./components/toggle-mode\";\nimport VariableModal from \"./components/var-modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Repeater Components\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  let tw_appHeader_glassMorphBG = \" bg-[color-mix(in_srgb,var(--color-foreground)_20%,transparent)] backdrop-blur-[10px]\";\n  const handleDarkModeChanges = event => {\n    setIsDarkMode(!isDarkMode);\n    console.log(\"Current Mode is : \" + isDarkMode);\n  };\n  useEffect(() => {\n    if (isDarkMode === true) {\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n    }\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen h-screen text-center shrink-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"min-h-[10vh] w-screen flex flex-col items-center justify-center font-[calc(10px_+_2vmin)] text-main-color absolute text-center\" + tw_appHeader_glassMorphBG,\n        children: /*#__PURE__*/_jsxDEV(TitleHeader, {\n          darkModeTitle: isDarkMode,\n          darkModeChangesTitle: handleDarkModeChanges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Repeater, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = App;\nfunction TitleHeader({\n  darkModeTitle,\n  darkModeChangesTitle\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sentence Repeater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = TitleHeader;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TitleHeader\");","map":{"version":3,"names":["useEffect","useState","Repeater","Mode","VariableModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkMode","setIsDarkMode","tw_appHeader_glassMorphBG","handleDarkModeChanges","event","console","log","document","body","classList","add","remove","children","className","TitleHeader","darkModeTitle","darkModeChangesTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Repeater from \"./components/repeater\";\r\nimport Mode from \"./components/toggle-mode\";\r\nimport VariableModal from \"./components/var-modal\";\r\n\r\nfunction App() {\r\n  // Repeater Components\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  let tw_appHeader_glassMorphBG =\r\n    \" bg-[color-mix(in_srgb,var(--color-foreground)_20%,transparent)] backdrop-blur-[10px]\";\r\n\r\n  const handleDarkModeChanges = (event) => {\r\n    setIsDarkMode(!isDarkMode);\r\n    console.log(\"Current Mode is : \" + isDarkMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode === true) {\r\n      document.body.classList.add(\"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-screen h-screen text-center shrink-1\">\r\n        <header\r\n          className={\r\n            \"min-h-[10vh] w-screen flex flex-col items-center justify-center font-[calc(10px_+_2vmin)] text-main-color absolute text-center\" +\r\n            tw_appHeader_glassMorphBG\r\n          }\r\n        >\r\n          <TitleHeader\r\n            darkModeTitle={isDarkMode}\r\n            darkModeChangesTitle={handleDarkModeChanges}\r\n          />\r\n        </header>\r\n        <div>\r\n          \r\n          <Repeater />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TitleHeader({ darkModeTitle, darkModeChangesTitle }) {\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-full\">\r\n        <h1>Sentence Repeater</h1>\r\n\r\n        {/* <Mode\r\n          currentState={darkModeTitle}\r\n          darkModeChanges={darkModeChangesTitle}\r\n        /> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,IAAIY,yBAAyB,GAC3B,uFAAuF;EAEzF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvCH,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BK,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGN,UAAU,CAAC;EAChD,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIW,UAAU,KAAK,IAAI,EAAE;MACvBO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IACrC,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACxC;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,wCAAwC;MAAAD,QAAA,gBACrDjB,OAAA;QACEkB,SAAS,EACP,gIAAgI,GAChIX,yBACD;QAAAU,QAAA,eAEDjB,OAAA,CAACmB,WAAW;UACVC,aAAa,EAAEf,UAAW;UAC1BgB,oBAAoB,EAAEb;QAAsB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTzB,OAAA;QAAAiB,QAAA,eAEEjB,OAAA,CAACJ,QAAQ;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACrB,EAAA,CAzCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CZ,SAASgB,WAAWA,CAAC;EAAEC,aAAa;EAAEC;AAAqB,CAAC,EAAE;EAC5D,oBACErB,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC5BjB,OAAA;QAAAiB,QAAA,EAAI;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMvB;EAAC,gBACN,CAAC;AAEP;AAACE,GAAA,GAbQR,WAAW;AAepB,eAAehB,GAAG;AAAC,IAAAuB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}