{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Repeater from \"./components/repeater\";\nimport Mode from \"./components/toggle-mode\";\nimport bg from \"./img/background-img.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Repeater Components\n\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  let tw_appHeader_glassMorphBG = \" bg-[color-mix(in_srgb,var(--color-foreground)_20%,transparent)] backdrop-blur-[10px]\";\n  const handleDarkModeChanges = event => {\n    setIsDarkMode(!isDarkMode);\n    console.log(\"Current Mode is : \" + isDarkMode);\n  };\n  useEffect(() => {\n    if (isDarkMode === true) {\n      document.body.classList.add(\"dark\");\n    } else {\n      document.body.classList.remove(\"dark\");\n    }\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen grid grid-auto bg-center bg-repeat text-center shrink-1  \",\n    style: {\n      backgroundImage: `url(${bg})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"h-[10%] min-h-[10vh] w-screen flex flex-col items-center justify-center font-[calc(10px_+_2vmin)] text-main-color  text-center z-[100]  sticky top-0\" + tw_appHeader_glassMorphBG,\n      children: /*#__PURE__*/_jsxDEV(TitleHeader, {\n        darkModeTitle: isDarkMode,\n        darkModeChangesTitle: handleDarkModeChanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full\",\n      children: /*#__PURE__*/_jsxDEV(Repeater, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = App;\nfunction TitleHeader({\n  darkModeTitle,\n  darkModeChangesTitle\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full grid content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sentence Repeater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = TitleHeader;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TitleHeader\");","map":{"version":3,"names":["useEffect","useState","Repeater","Mode","bg","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkMode","setIsDarkMode","tw_appHeader_glassMorphBG","handleDarkModeChanges","event","console","log","document","body","classList","add","remove","className","style","backgroundImage","children","TitleHeader","darkModeTitle","darkModeChangesTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Repeater from \"./components/repeater\";\r\nimport Mode from \"./components/toggle-mode\";\r\nimport bg from \"./img/background-img.jpg\";\r\n\r\nfunction App() {\r\n  // Repeater Components\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  let tw_appHeader_glassMorphBG =\r\n    \" bg-[color-mix(in_srgb,var(--color-foreground)_20%,transparent)] backdrop-blur-[10px]\";\r\n\r\n  const handleDarkModeChanges = (event) => {\r\n    setIsDarkMode(!isDarkMode);\r\n    console.log(\"Current Mode is : \" + isDarkMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode === true) {\r\n      document.body.classList.add(\"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <div\r\n      className=\"w-screen h-screen grid grid-auto bg-center bg-repeat text-center shrink-1  \"\r\n      style={{ backgroundImage: `url(${bg})` }}\r\n    >\r\n      <header\r\n        className={\r\n          \"h-[10%] min-h-[10vh] w-screen flex flex-col items-center justify-center font-[calc(10px_+_2vmin)] text-main-color  text-center z-[100]  sticky top-0\" +\r\n          tw_appHeader_glassMorphBG\r\n        }\r\n      >\r\n        <TitleHeader\r\n          darkModeTitle={isDarkMode}\r\n          darkModeChangesTitle={handleDarkModeChanges}\r\n        />\r\n      </header>\r\n      <div className=\"w-full h-full\">\r\n        <Repeater />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TitleHeader({ darkModeTitle, darkModeChangesTitle }) {\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-full grid content-center\">\r\n        <h1>Sentence Repeater</h1>\r\n\r\n        {/* <Mode\r\n          currentState={darkModeTitle}\r\n          darkModeChanges={darkModeChangesTitle}\r\n        /> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,EAAE,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,IAAIY,yBAAyB,GAC3B,uFAAuF;EAEzF,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvCH,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BK,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGN,UAAU,CAAC;EAChD,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIW,UAAU,KAAK,IAAI,EAAE;MACvBO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IACrC,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACxC;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA;IACEiB,SAAS,EAAC,6EAA6E;IACvFC,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAOrB,EAAE;IAAI,CAAE;IAAAsB,QAAA,gBAEzCpB,OAAA;MACEiB,SAAS,EACP,sJAAsJ,GACtJV,yBACD;MAAAa,QAAA,eAEDpB,OAAA,CAACqB,WAAW;QACVC,aAAa,EAAEjB,UAAW;QAC1BkB,oBAAoB,EAAEf;MAAsB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT3B,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAG,QAAA,eAC5BpB,OAAA,CAACJ,QAAQ;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAzCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CZ,SAASkB,WAAWA,CAAC;EAAEC,aAAa;EAAEC;AAAqB,CAAC,EAAE;EAC5D,oBACEvB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAKiB,SAAS,EAAC,mCAAmC;MAAAG,QAAA,eAChDpB,OAAA;QAAAoB,QAAA,EAAI;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMvB;EAAC,gBACN,CAAC;AAEP;AAACE,GAAA,GAbQR,WAAW;AAepB,eAAelB,GAAG;AAAC,IAAAyB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}