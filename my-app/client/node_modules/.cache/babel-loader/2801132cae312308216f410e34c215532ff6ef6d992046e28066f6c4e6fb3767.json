{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\spawn-var-modal-button.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SpawnVarModal({\n  incomingKey,\n  incomingValues,\n  incomingHandleVariableChanges\n}) {\n  _s();\n  const [modalExist, setModalExist] = useState(false);\n  function toggleModal() {\n    setModalExist(!modalExist);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border-white text-white border rounded-[10px] p-[10px] hover:bg-black\",\n      onClick: e => toggleModal(),\n      children: \"Spawn Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen h-screen inset-0 fixed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SpawnVarModal, \"5LwpWSj9YgTfkjyds7jdoMhQ3lQ=\");\n_c = SpawnVarModal;\nexport default SpawnVarModal;\nvar _c;\n$RefreshReg$(_c, \"SpawnVarModal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpawnVarModal","incomingKey","incomingValues","incomingHandleVariableChanges","_s","modalExist","setModalExist","toggleModal","children","className","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/spawn-var-modal-button.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction SpawnVarModal({\r\n  incomingKey,\r\n  incomingValues,\r\n  incomingHandleVariableChanges,\r\n}) {\r\n  const [modalExist, setModalExist] = useState(false);\r\n\r\n  function toggleModal() {\r\n    setModalExist(!modalExist);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"border-white text-white border rounded-[10px] p-[10px] hover:bg-black\"\r\n        onClick={(e) => toggleModal()}\r\n      >\r\n        Spawn Modal\r\n      </button>\r\n      <div className=\"w-screen h-screen inset-0 fixed\"></div>\r\n    </>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default SpawnVarModal;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,aAAaA,CAAC;EACrBC,WAAW;EACXC,cAAc;EACdC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASY,WAAWA,CAAA,EAAG;IACrBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MACEY,SAAS,EAAC,uEAAuE;MACjFC,OAAO,EAAGC,CAAC,IAAKJ,WAAW,CAAC,CAAE;MAAAC,QAAA,EAC/B;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTlB,OAAA;MAAKY,SAAS,EAAC;IAAiC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACvD,CAAC;AAIP;AAACX,EAAA,CAxBQJ,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AA0BtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}