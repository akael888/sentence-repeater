{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\chip-list.js\";\nimport css from \"./chip-list.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chip({\n  incomingVariableIndex,\n  incomingChipList,\n  incomingHandleVariableChanges\n}) {\n  function removeChip(indexToRemove) {\n    let tw_chip_glassMorphBG = \" bg-[color-mix(in_srgb,var(--main-color)_90%,transparent)] backdrop-blur-[10px]\";\n    const removedList = incomingChipList.filter((_, index) => index !== indexToRemove);\n    incomingHandleVariableChanges(incomingVariableIndex, \"list\", removedList);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: incomingChipList != null ? incomingChipList.map((value, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full inline-flex bg-opposite-color rounded-[10px]\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: css[\"chip-object\"],\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => removeChip(index),\n            className: \"w-[30%] h-full text-main-color\",\n            children: [\" \", \"X\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false)) : \"\"\n    }, void 0, false)\n  }, void 0, false);\n}\n_c = Chip;\nexport default Chip;\nvar _c;\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"names":["css","jsxDEV","_jsxDEV","Fragment","_Fragment","Chip","incomingVariableIndex","incomingChipList","incomingHandleVariableChanges","removeChip","indexToRemove","tw_chip_glassMorphBG","removedList","filter","_","index","children","map","value","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/chip-list.js"],"sourcesContent":["import css from \"./chip-list.module.css\";\r\n\r\nfunction Chip({\r\n  incomingVariableIndex,\r\n  incomingChipList,\r\n  incomingHandleVariableChanges,\r\n}) {\r\n  function removeChip(indexToRemove) {\r\n    let tw_chip_glassMorphBG =\r\n      \" bg-[color-mix(in_srgb,var(--main-color)_90%,transparent)] backdrop-blur-[10px]\";\r\n\r\n    const removedList = incomingChipList.filter(\r\n      (_, index) => index !== indexToRemove\r\n    );\r\n    incomingHandleVariableChanges(incomingVariableIndex, \"list\", removedList);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {incomingChipList != null\r\n          ? incomingChipList.map((value, index) => (\r\n              <>\r\n                <div className=\"w-full h-full inline-flex bg-opposite-color rounded-[10px]\">\r\n                  <span className={css[\"chip-object\"]}>{value}</span>\r\n                  <span> </span>\r\n                  <button\r\n                    onClick={(e) => removeChip(index)}\r\n                    className=\"w-[30%] h-full text-main-color\"\r\n                  >\r\n                    {\" \"}\r\n                    X{\" \"}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ))\r\n          : \"\"}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chip;\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,IAAIA,CAAC;EACZC,qBAAqB;EACrBC,gBAAgB;EAChBC;AACF,CAAC,EAAE;EACD,SAASC,UAAUA,CAACC,aAAa,EAAE;IACjC,IAAIC,oBAAoB,GACtB,iFAAiF;IAEnF,MAAMC,WAAW,GAAGL,gBAAgB,CAACM,MAAM,CACzC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKL,aAC1B,CAAC;IACDF,6BAA6B,CAACF,qBAAqB,EAAE,MAAM,EAAEM,WAAW,CAAC;EAC3E;EAEA,oBACEV,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAAAE,SAAA;MAAAY,QAAA,EACGT,gBAAgB,IAAI,IAAI,GACrBA,gBAAgB,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEH,KAAK,kBAChCb,OAAA,CAAAE,SAAA;QAAAY,QAAA,eACEd,OAAA;UAAKiB,SAAS,EAAC,4DAA4D;UAAAH,QAAA,gBACzEd,OAAA;YAAMiB,SAAS,EAAEnB,GAAG,CAAC,aAAa,CAAE;YAAAgB,QAAA,EAAEE;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnDrB,OAAA;YAAAc,QAAA,EAAM;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACdrB,OAAA;YACEsB,OAAO,EAAGC,CAAC,IAAKhB,UAAU,CAACM,KAAK,CAAE;YAClCI,SAAS,EAAC,gCAAgC;YAAAH,QAAA,GAEzC,GAAG,EAAC,GACJ,EAAC,GAAG;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,gBACN,CACH,CAAC,GACF;IAAE,gBACN;EAAC,gBACH,CAAC;AAEP;AAACG,EAAA,GAtCQrB,IAAI;AAwCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}