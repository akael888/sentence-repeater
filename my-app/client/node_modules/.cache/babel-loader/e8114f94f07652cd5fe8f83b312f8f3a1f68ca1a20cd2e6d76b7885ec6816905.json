{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\text-input.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect, use } from \"react\";\nimport css from \"./text-input.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextInput({\n  incomingHandlePreviewTextChanges,\n  incomingHandleVariablesChanges,\n  incomingVariables\n}) {\n  _s();\n  //Tailwind Styles\n\n  //Text Input\n  let tw_textInput_md = \" md:w-[100%] md:p-[10px]\";\n  let tw_textInput_lg = \" lg:w-[50%]\";\n  let tw_textInput_focus = \" focus:bg-opposite-color focus:text-main-color focus:border focus:border-main-color focus:border-solid\";\n  let tw_textInput_hover = \" hover:bg-opposite-color hover:text-main-color hover:border hover:border-main-color hover:border-solid\";\n  let incomVarSize = incomingVariables != undefined ? incomingVariables.size : 0;\n  const [tempVariables, setTempVariables] = useState(new Map());\n  function addVariableOnInput(e) {\n    const textInput = e.target.value;\n\n    // Search for {} in the text\n    if (textInput.includes(\"{}\") || incomVarSize != 0) {\n      let searchPos = 0;\n      let allBracketPositions = [];\n      console.log(\"bracket size before:\" + allBracketPositions.length);\n      while (searchPos < textInput.length) {\n        const bracketPos = textInput.indexOf(\"{}\", searchPos);\n        if (bracketPos === -1) break;\n        allBracketPositions.push(bracketPos + 1);\n        searchPos = bracketPos + 1;\n      }\n      let updatedVariables = new Map(incomingVariables);\n      allBracketPositions.forEach((position, index) => {\n        if (!updatedVariables.has(index)) {\n          updatedVariables.set(index, {\n            id: position,\n            name: \"Variable \" + index,\n            type: \"Integer\",\n            value: index,\n            minValue: index,\n            maxValue: 10,\n            iterate: true,\n            interval: 1,\n            randomize: false,\n            displayText: \"Display Text\" //now that i think of it, should this be put inside a temp variable?\n          });\n        }\n      });\n      if (allBracketPositions.length < updatedVariables.size) {\n        while (allBracketPositions.length < updatedVariables.size) {\n          updatedVariables = deleteLatestVar(updatedVariables);\n          incomingHandleVariablesChanges(updatedVariables);\n          // console.log(incomingVariables.size);\n        }\n      } else incomingHandleVariablesChanges(updatedVariables);\n    }\n    incomingHandlePreviewTextChanges(textInput);\n  }\n  function deleteLatestVar(updatedVariables) {\n    if (incomingVariables.size === 0) return;\n    const lastKey = Array.from(updatedVariables.keys()).pop();\n    if (lastKey !== undefined) {\n      updatedVariables.delete(lastKey);\n      console.log(\"Updated Var Deleted : \" + updatedVariables);\n      console.log(updatedVariables);\n      // setTempVariables(tempMap);\n      // incomingHandleVariablesChanges(updatedVariables);\n      return updatedVariables;\n    }\n    // console.log(\"pakeEko\");\n    // setTempVariables(incomingVariables);\n\n    // setTempVariables(tempVariables[tempVariables.size - 1);\n    // // console.log(updatedVariables);\n    // console.log(\"---------------\");\n    // incomingHandleVariablesChanges(setTempVariables);\n    // console.log(incomingVariables);\n  }\n\n  // useEffect(() => {\n  //   //delete variables\n  // }, [incomVarSize]);\n\n  // function enableEditing(element) {\n  //   if (!element) return;\n  //   element.setAttribute(\"contenteditable\", true);\n  //   element.focus();\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        // contentEditable=\"true\"\n        className: \"w-full h-[100%] max-w-[80%] text-center flex overflow-auto bg-main-color justify-center text-opposite-color items-center border border-opposite-color cursor-text rounded-[10px] border-solid p-[10px]\" + tw_textInput_hover + tw_textInput_focus,\n        placeholder: \"Type Text here..\"\n        // onClick={(e) => enableEditing(e.target)}\n        ,\n        onChange: e => addVariableOnInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TextInput, \"XgDGksITBk0AZXTs4ATeWGcjfGs=\");\n_c = TextInput;\nexport default TextInput;\n\n//  // contentEditable=\"true\"\n//     className={\n//       \" h-full bg-main-color place-content-center border border-opposite-color cursor-text rounded-[10px] border-solid\" +\n//       tw_textInput_hover +\n//       tw_textInput_focus +\n//       tw_textInput_md +\n//       tw_textInput_lg\n//     }\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["useRef","useState","useEffect","use","css","jsxDEV","_jsxDEV","Fragment","_Fragment","TextInput","incomingHandlePreviewTextChanges","incomingHandleVariablesChanges","incomingVariables","_s","tw_textInput_md","tw_textInput_lg","tw_textInput_focus","tw_textInput_hover","incomVarSize","undefined","size","tempVariables","setTempVariables","Map","addVariableOnInput","e","textInput","target","value","includes","searchPos","allBracketPositions","console","log","length","bracketPos","indexOf","push","updatedVariables","forEach","position","index","has","set","id","name","type","minValue","maxValue","iterate","interval","randomize","displayText","deleteLatestVar","lastKey","Array","from","keys","pop","delete","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/text-input.js"],"sourcesContent":["import { useRef, useState, useEffect, use } from \"react\";\r\nimport css from \"./text-input.module.css\";\r\n\r\nfunction TextInput({\r\n  incomingHandlePreviewTextChanges,\r\n  incomingHandleVariablesChanges,\r\n  incomingVariables,\r\n}) {\r\n  //Tailwind Styles\r\n\r\n  //Text Input\r\n  let tw_textInput_md = \" md:w-[100%] md:p-[10px]\";\r\n  let tw_textInput_lg = \" lg:w-[50%]\";\r\n  let tw_textInput_focus =\r\n    \" focus:bg-opposite-color focus:text-main-color focus:border focus:border-main-color focus:border-solid\";\r\n  let tw_textInput_hover =\r\n    \" hover:bg-opposite-color hover:text-main-color hover:border hover:border-main-color hover:border-solid\";\r\n  let incomVarSize =\r\n    incomingVariables != undefined ? incomingVariables.size : 0;\r\n\r\n  const [tempVariables, setTempVariables] = useState(new Map());\r\n\r\n  function addVariableOnInput(e) {\r\n    const textInput = e.target.value;\r\n\r\n    // Search for {} in the text\r\n    if (textInput.includes(\"{}\") || incomVarSize != 0) {\r\n      let searchPos = 0;\r\n      let allBracketPositions = [];\r\n      console.log(\"bracket size before:\" + allBracketPositions.length);\r\n\r\n      while (searchPos < textInput.length) {\r\n        const bracketPos = textInput.indexOf(\"{}\", searchPos);\r\n        if (bracketPos === -1) break;\r\n        allBracketPositions.push(bracketPos + 1);\r\n        searchPos = bracketPos + 1;\r\n      }\r\n      let updatedVariables = new Map(incomingVariables);\r\n\r\n      allBracketPositions.forEach((position, index) => {\r\n        if (!updatedVariables.has(index)) {\r\n          updatedVariables.set(index, {\r\n            id: position,\r\n            name: \"Variable \" + index,\r\n            type: \"Integer\",\r\n            value: index,\r\n            minValue: index,\r\n            maxValue: 10,\r\n            iterate: true,\r\n            interval: 1,\r\n            randomize: false,\r\n            displayText: \"Display Text\", //now that i think of it, should this be put inside a temp variable?\r\n          });\r\n        }\r\n      });\r\n\r\n      if (allBracketPositions.length < updatedVariables.size) {\r\n        while (allBracketPositions.length < updatedVariables.size) {\r\n          updatedVariables = deleteLatestVar(updatedVariables);\r\n          incomingHandleVariablesChanges(updatedVariables);\r\n          // console.log(incomingVariables.size);\r\n        }\r\n      } else incomingHandleVariablesChanges(updatedVariables);\r\n    }\r\n    incomingHandlePreviewTextChanges(textInput);\r\n  }\r\n\r\n  function deleteLatestVar(updatedVariables) {\r\n    if (incomingVariables.size === 0) return;\r\n\r\n    const lastKey = Array.from(updatedVariables.keys()).pop();\r\n    if (lastKey !== undefined) {\r\n      updatedVariables.delete(lastKey);\r\n      console.log(\"Updated Var Deleted : \" + updatedVariables);\r\n      console.log(updatedVariables);\r\n      // setTempVariables(tempMap);\r\n      // incomingHandleVariablesChanges(updatedVariables);\r\n      return updatedVariables;\r\n    }\r\n    // console.log(\"pakeEko\");\r\n    // setTempVariables(incomingVariables);\r\n\r\n    // setTempVariables(tempVariables[tempVariables.size - 1);\r\n    // // console.log(updatedVariables);\r\n    // console.log(\"---------------\");\r\n    // incomingHandleVariablesChanges(setTempVariables);\r\n    // console.log(incomingVariables);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   //delete variables\r\n  // }, [incomVarSize]);\r\n\r\n  // function enableEditing(element) {\r\n  //   if (!element) return;\r\n  //   element.setAttribute(\"contenteditable\", true);\r\n  //   element.focus();\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-full flex justify-center items-center\">\r\n        <input\r\n          // contentEditable=\"true\"\r\n          className={\r\n            \"w-full h-[100%] max-w-[80%] text-center flex overflow-auto bg-main-color justify-center text-opposite-color items-center border border-opposite-color cursor-text rounded-[10px] border-solid p-[10px]\" +\r\n            tw_textInput_hover +\r\n            tw_textInput_focus\r\n          }\r\n          placeholder=\"Type Text here..\"\r\n          // onClick={(e) => enableEditing(e.target)}\r\n          onChange={(e) => addVariableOnInput(e)}\r\n        ></input>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default TextInput;\r\n\r\n//  // contentEditable=\"true\"\r\n//     className={\r\n//       \" h-full bg-main-color place-content-center border border-opposite-color cursor-text rounded-[10px] border-solid\" +\r\n//       tw_textInput_hover +\r\n//       tw_textInput_focus +\r\n//       tw_textInput_md +\r\n//       tw_textInput_lg\r\n//     }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}