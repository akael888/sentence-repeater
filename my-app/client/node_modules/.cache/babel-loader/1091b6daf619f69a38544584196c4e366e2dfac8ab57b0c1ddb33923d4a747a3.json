{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elgratio\\\\Documents\\\\Learning\\\\Front End - Web Dev\\\\Projects\\\\React App Test\\\\my-app\\\\src\\\\components\\\\text-preview.js\";\nimport css from \"./text-preview.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Preview({\n  incomingPreviewText,\n  incomingVariables\n}) {\n  function generatePreviewandVariables() {\n    if (incomingPreviewText && incomingVariables) {\n      let text = incomingPreviewText;\n      const newincomingVariables = new Map();\n      let currentKeyIndex = 0;\n      for (const [key, value] of incomingVariables.entries()) {\n        newincomingVariables.set(key, {\n          ...value\n        });\n      }\n      const variableEntries = Array.from(incomingVariables.entries());\n      while (text.includes(\"{}\") && variableEntries.length > 0) {\n        const [key, value] = variableEntries[currentKeyIndex % variableEntries.length];\n        if (value.name !== \"\") {\n          text = text.replace(\"{}\", \"{\" + String(value.name) + \"}\");\n        } else {\n          text = text.replace(\"{}\", \"{\" + \"Variable \" + String(key) + \"}\");\n        }\n\n        //DEBUG LOG--------------------------\n        console.log(\"Text inside generatedPreview() : \" + text + \" (on this Variable Index: \" + currentKeyIndex + \")\");\n        //-------------------------------------\n\n        currentKeyIndex++;\n      }\n\n      //DEBUG LOG--------------------------\n      console.log(\"Generated Text from generatePreviewandVariables(): \" + text);\n      //-------------------------------------\n\n      return String(text);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css[\"preview-container\"],\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: incomingPreviewText ? generatePreviewandVariables() : \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["css","jsxDEV","_jsxDEV","Fragment","_Fragment","Preview","incomingPreviewText","incomingVariables","generatePreviewandVariables","text","newincomingVariables","Map","currentKeyIndex","key","value","entries","set","variableEntries","Array","from","includes","length","name","replace","String","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elgratio/Documents/Learning/Front End - Web Dev/Projects/React App Test/my-app/src/components/text-preview.js"],"sourcesContent":["import css from \"./text-preview.module.css\";\r\n\r\nfunction Preview({ incomingPreviewText, incomingVariables }) {\r\n  function generatePreviewandVariables() {\r\n    if (incomingPreviewText && incomingVariables) {\r\n      let text = incomingPreviewText;\r\n      const newincomingVariables = new Map();\r\n      let currentKeyIndex = 0;\r\n      for (const [key, value] of incomingVariables.entries()) {\r\n        newincomingVariables.set(key, { ...value });\r\n      }\r\n      const variableEntries = Array.from(incomingVariables.entries());\r\n\r\n      while (text.includes(\"{}\") && variableEntries.length > 0) {\r\n        const [key, value] =\r\n          variableEntries[currentKeyIndex % variableEntries.length];\r\n\r\n        if (value.name !== \"\") {\r\n          text = text.replace(\"{}\", \"{\" + String(value.name) + \"}\");\r\n        } else {\r\n          text = text.replace(\"{}\", \"{\" + \"Variable \" + String(key) + \"}\");\r\n        }\r\n\r\n        //DEBUG LOG--------------------------\r\n        console.log(\r\n          \"Text inside generatedPreview() : \" +\r\n            text +\r\n            \" (on this Variable Index: \" +\r\n            currentKeyIndex +\r\n            \")\"\r\n        );\r\n        //-------------------------------------\r\n\r\n        currentKeyIndex++;\r\n      }\r\n\r\n      //DEBUG LOG--------------------------\r\n      console.log(\"Generated Text from generatePreviewandVariables(): \" + text);\r\n      //-------------------------------------\r\n\r\n      return String(text);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={css[\"preview-container\"]}>\r\n        <h1>\r\n          {incomingPreviewText ? generatePreviewandVariables() : \"Preview\"}\r\n        </h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Preview;\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,OAAOA,CAAC;EAAEC,mBAAmB;EAAEC;AAAkB,CAAC,EAAE;EAC3D,SAASC,2BAA2BA,CAAA,EAAG;IACrC,IAAIF,mBAAmB,IAAIC,iBAAiB,EAAE;MAC5C,IAAIE,IAAI,GAAGH,mBAAmB;MAC9B,MAAMI,oBAAoB,GAAG,IAAIC,GAAG,CAAC,CAAC;MACtC,IAAIC,eAAe,GAAG,CAAC;MACvB,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIP,iBAAiB,CAACQ,OAAO,CAAC,CAAC,EAAE;QACtDL,oBAAoB,CAACM,GAAG,CAACH,GAAG,EAAE;UAAE,GAAGC;QAAM,CAAC,CAAC;MAC7C;MACA,MAAMG,eAAe,GAAGC,KAAK,CAACC,IAAI,CAACZ,iBAAiB,CAACQ,OAAO,CAAC,CAAC,CAAC;MAE/D,OAAON,IAAI,CAACW,QAAQ,CAAC,IAAI,CAAC,IAAIH,eAAe,CAACI,MAAM,GAAG,CAAC,EAAE;QACxD,MAAM,CAACR,GAAG,EAAEC,KAAK,CAAC,GAChBG,eAAe,CAACL,eAAe,GAAGK,eAAe,CAACI,MAAM,CAAC;QAE3D,IAAIP,KAAK,CAACQ,IAAI,KAAK,EAAE,EAAE;UACrBb,IAAI,GAAGA,IAAI,CAACc,OAAO,CAAC,IAAI,EAAE,GAAG,GAAGC,MAAM,CAACV,KAAK,CAACQ,IAAI,CAAC,GAAG,GAAG,CAAC;QAC3D,CAAC,MAAM;UACLb,IAAI,GAAGA,IAAI,CAACc,OAAO,CAAC,IAAI,EAAE,GAAG,GAAG,WAAW,GAAGC,MAAM,CAACX,GAAG,CAAC,GAAG,GAAG,CAAC;QAClE;;QAEA;QACAY,OAAO,CAACC,GAAG,CACT,mCAAmC,GACjCjB,IAAI,GACJ,4BAA4B,GAC5BG,eAAe,GACf,GACJ,CAAC;QACD;;QAEAA,eAAe,EAAE;MACnB;;MAEA;MACAa,OAAO,CAACC,GAAG,CAAC,qDAAqD,GAAGjB,IAAI,CAAC;MACzE;;MAEA,OAAOe,MAAM,CAACf,IAAI,CAAC;IACrB;EACF;EAEA,oBACEP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACEzB,OAAA;MAAK0B,SAAS,EAAE5B,GAAG,CAAC,mBAAmB,CAAE;MAAA2B,QAAA,eACvCzB,OAAA;QAAAyB,QAAA,EACGrB,mBAAmB,GAAGE,2BAA2B,CAAC,CAAC,GAAG;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACN,CAAC;AAEP;AAACC,EAAA,GAnDQ5B,OAAO;AAqDhB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}